
// Adding local fonts
@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix')  format('embedded-opentype'),
         url($file-name + '.woff') format('woff'),
         url($file-name + '.ttf')  format('truetype'),
         url($file-name + '.svg##{$font-name}')  format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}


// rem unit with px fallback
@function calculateRem($size) {
  $remSize: $size / 14px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


// Styling with font
@mixin font-roboto($size: false, $colour: false, $style: false, $weight: false,  $lh: false) {
	font-family: "Roboto", Helvetica, Arial, sans-serif;
	@if $size {
		font-size: $size;
	}
	@if $colour {
		color: $colour;
	}
  @if $style {
    font-style: $style;
  }
	@if $weight {
		font-weight: $weight;
	}
	@if $lh {
		line-height: $lh;
	}
}

@mixin font-roboto-cond($size: false, $colour: false, $style: false, $weight: false,  $lh: false) {
	font-family: "Roboto Condensed", Helvetica, Arial, sans-serif;
	@if $size {
		font-size: $size;
	}
	@if $colour {
		color: $colour;
	}
  @if $style {
    font-style: $style;
  }
	@if $weight {
		font-weight: $weight;
	}
	@if $lh {
		line-height: $lh;
	}
}


// Breakpoints
@mixin breakpoint($point) {
  @if $point == sm-max {
    @media (max-width: 460px) { @content; }
  }
  @else if $point == sm-min {
    @media (min-width: 320px) { @content; }
  }
  @else if $point == md-max {
    @media (max-width: 800px) { @content; }
  }
  @else if $point == md-min {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == lg-max {
    @media (max-width: 1024px)  { @content; }
  }
  @else if $point == lg-min {
    @media (min-width: 960px)  { @content; }
  }
}
